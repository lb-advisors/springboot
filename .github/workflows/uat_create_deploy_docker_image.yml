name: UAT - Docker image pushed to render.com

on:
  push:
    branches:
      - develop
  #  pull_request:
  #    branches:
  #      - main
  #      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

        # Set up Node.js 20
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "17"

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Get commit message
        id: commit_message
        #run: echo "::set-output name=message::$(git log -1 --pretty=%B)"
        run: echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Get commit hash
        id: commit_hash
        #run: echo "::set-output name=hash::$(git log -1 --pretty=%H)"
        run: echo "hash=$(git log -1 --pretty=%H)" >> $GITHUB_OUTPUT

      - name: Get current time
        id: build_time
        #run: echo "::set-output name=time::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        run: echo "time=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build the Docker image
        run: docker build --file Dockerfile --tag ghcr.io/lb-advisors/springboot-uat:latest --build-arg COMMIT_MESSAGE="${{ steps.commit_message.outputs.message }}" --build-arg COMMIT_HASH="${{ steps.commit_hash.outputs.hash }}" --build-arg BUILD_TIME="${{ steps.build_time.outputs.time }}" .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_GH_TOKEN }}

      # to read: https://dev.to/onticdani/automatically-build-docker-images-with-github-actions-3n8e
      - name: Push the Docker image
        run: docker push ghcr.io/lb-advisors/springboot-uat:latest

      - name: Archive JAR file
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar

      # trigger render.com docker image deployment
      - name: Deploy to Render
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.RENDER_UAT_TRIGGER_URL }}
          method: "GET"
